<?phpnamespace app\Services;use app\Repositories\UserRepository;use app\Responses\Response;class AuthorizationService{    public static function  getAuthorizationHeader()    {        $headers = null;        if (isset($_SERVER['Authorization'])) {            $headers = trim($_SERVER["Authorization"]);        }        else if (isset($_SERVER['HTTP_AUTHORIZATION'])) { //Nginx or fast CGI            $headers = trim($_SERVER["HTTP_AUTHORIZATION"]);        } elseif (function_exists('apache_request_headers')) {            $requestHeaders = apache_request_headers();            // Server-side fix for bug in old Android versions (a nice side-effect of this fix means we don't care about capitalization for Authorization)            $requestHeaders = array_combine(array_map('ucwords', array_keys($requestHeaders)), array_values($requestHeaders));            //print_r($requestHeaders);            if (isset($requestHeaders['Authorization'])) {                $headers = trim($requestHeaders['Authorization']);            }        }        return $headers;    }    public static function getBearerToken() {        $headers = self::getAuthorizationHeader();// HEADER: Get the access token from the header        if (!empty($headers)) {            if (preg_match('/Bearer\s(\S+)/', $headers, $matches)) {                return $matches[1];            }        }        return null;    }    public static function is_validToken($token)    {        try {            $payload = JWTService::decodeToken($token);            return $payload;        }catch (\Exception $exception)        {            return false;        }    }    public static function hasAccessTo($user , $province_id)    {        $user = (new UserRepository())->getSingleById($user->user_id);        if (in_array($user->role , ['admin' , 'president']))        {            return true;        }        $user_province = json_decode($user->province);        return in_array($province_id,$user_province );    }}