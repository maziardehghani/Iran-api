<?phpnamespace app\Models;use PDO;abstract class model implements modelable{    protected static $conn = '';    public function __construct()    {        try {            self::$conn = new \PDO('mysql:host='.DATABASE['HOST'].';dbname='.DATABASE['DB'],DATABASE['USER'],DATABASE['PASSWORD']);        }catch (\PDOException $PDOException)        {            die('connection failed to database');        }    }    protected static function do_select($sql , array $values = [] , $fetchAll= true)    {        $stmt = self::$conn->prepare($sql);        foreach ($values as $key => $value)        {            $stmt->execute([$value]);        }        if ($fetchAll)        {            $records = $stmt->fetchAll(PDO::FETCH_OBJ);        }else        {            $records =  $stmt->fetch(PDO::FETCH_OBJ);        }        return $records;    }    protected static function do_query($sql , array $values = [])    {        $stmt = self::$conn->prepare($sql);        foreach ($values as $key=>$value)        {            $stmt->bindValue($key+1 , $value);        }        $records = $stmt->execute();        return $records;    }}